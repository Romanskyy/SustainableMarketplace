# Use a specific version of Node.js on Alpine to minimize the size of the production image
FROM node:18-alpine as builder

# Set the working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm install --only=production

# Copy the rest of your application code
COPY . .

# Build the application if necessary (for compiled languages)
# For Node.js, if you have a build step (e.g., TypeScript or minification):
# RUN npm run build

# Start a new stage to create a lean production image
FROM node:18-alpine as production

# Set the working directory in this new stage
WORKDIR /app

# Copy the built application from the previous stage
COPY --from=builder /app ./

# Expose the port the app runs on
EXPOSE 3000

# Command to run your app
CMD ["node", "server.js"]

